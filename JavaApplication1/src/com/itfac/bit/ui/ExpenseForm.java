/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.itfac.bit.ui;

import com.itfac.bit.database.Database;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Image;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.pdf.CMYKColor;
import com.itextpdf.text.pdf.draw.LineSeparator;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileOutputStream;
import java.sql.*;
import javax.swing.JOptionPane;

public class ExpenseForm extends javax.swing.JFrame {

    /**
     * Creates new form ExpenseForm
     */
    Connection connection;
    PreparedStatement statement;
    ResultSet resultSet,resultSet1;
    String format;
    String del2 = "";
    String et = "";
    String emp = "";
    MainNew mainNew;

    public ExpenseForm() {
        initComponents();
        this.setResizable(false); 
        this.setLocationRelativeTo(null);
    }

    public ExpenseForm(MainNew mainNew) {
        this.setResizable(false); 
        this.setLocationRelativeTo(null);
        this.mainNew = mainNew;
        initComponents();
        try {
            connection = Database.openConnection();
            
            statement = connection.prepareStatement("SELECT form_No FROM expense_form_header");
            resultSet = statement.executeQuery();

            if (!resultSet.isBeforeFirst()) {
                format = String.format("%06d", 1);
            } else {
                resultSet.last();
                int formNo = resultSet.getInt(1);

                formNo = formNo + 1;
                format = String.format("%06d", formNo);
            }
            
            txt_formNumber.setText(format);
            txt_formNumber.setEditable(false);

            statement = connection.prepareStatement("SELECT del_No FROM delivery_header WHERE del_Status = 'Pending'");
            resultSet1 = statement.executeQuery();
            
            while (resultSet1.next()) {
                cmb_deliveryNumber.addItem(resultSet1.getString(1));
            }
            
            cmb_deliveryNumber.setSelectedIndex(-1);
            cmb_id.setSelectedIndex(-1);
            cmb_id.removeAllItems();
            txt_firstName.setText("");
            txt_lastName.setText("");
            txt_contactNumber.setText("");
            txt_type.setText("");
            
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Error Occured.\n" + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmb_deliveryNumber = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txt_firstName = new javax.swing.JTextField();
        txt_contactNumber = new javax.swing.JTextField();
        txt_lastName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txt_type = new javax.swing.JTextField();
        cmb_id = new javax.swing.JComboBox();
        btn_clear = new javax.swing.JButton();
        btn_cancel = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_formNumber = new javax.swing.JTextField();
        btn_generateExpenseForm = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(97, 212, 179));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Expense Form", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 102, 153));
        jLabel1.setText("Delivery Number");

        cmb_deliveryNumber.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_deliveryNumberItemStateChanged(evt);
            }
        });
        cmb_deliveryNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_deliveryNumberActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(218, 247, 220));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Delivery Representative Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 102, 153));
        jLabel4.setText("ID");

        jLabel5.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 102, 153));
        jLabel5.setText("Name");

        jLabel6.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 102, 153));
        jLabel6.setText("Contact Number");

        txt_firstName.setEditable(false);

        txt_contactNumber.setEditable(false);

        txt_lastName.setEditable(false);

        jLabel7.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(51, 102, 153));
        jLabel7.setText("Type");

        txt_type.setEditable(false);

        cmb_id.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmb_idItemStateChanged(evt);
            }
        });
        cmb_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_idActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_firstName)
                            .addComponent(txt_contactNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(cmb_id, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_lastName, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_type, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_firstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_lastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_contactNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_type, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        btn_clear.setBackground(new java.awt.Color(51, 102, 153));
        btn_clear.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btn_clear.setForeground(java.awt.Color.white);
        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });

        btn_cancel.setBackground(new java.awt.Color(255, 103, 125));
        btn_cancel.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btn_cancel.setForeground(java.awt.Color.white);
        btn_cancel.setText("Cancel");
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 102, 153));
        jLabel2.setText("Form Number");

        txt_formNumber.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_formNumberActionPerformed(evt);
            }
        });

        btn_generateExpenseForm.setBackground(new java.awt.Color(0, 88, 50));
        btn_generateExpenseForm.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btn_generateExpenseForm.setForeground(java.awt.Color.white);
        btn_generateExpenseForm.setText("Generate Expense Form");
        btn_generateExpenseForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_generateExpenseFormActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cmb_deliveryNumber, 0, 100, Short.MAX_VALUE)
                    .addComponent(txt_formNumber))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(btn_generateExpenseForm)
                        .addGap(75, 75, 75)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btn_cancel, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_clear, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 81, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_formNumber, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmb_deliveryNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_generateExpenseForm)
                        .addGap(44, 44, 44))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btn_clear)
                        .addGap(28, 28, 28)
                        .addComponent(btn_cancel)
                        .addGap(22, 22, 22))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmb_deliveryNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_deliveryNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_deliveryNumberActionPerformed

    private void txt_formNumberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_formNumberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_formNumberActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        cmb_deliveryNumber.setSelectedIndex(-1);
        cmb_id.setSelectedIndex(-1);
        txt_firstName.setText("");
        txt_lastName.setText("");
        txt_contactNumber.setText("");
        txt_type.setText("");
    }//GEN-LAST:event_btn_clearActionPerformed

    private void cmb_deliveryNumberItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_deliveryNumberItemStateChanged
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            try {
                cmb_id.removeAllItems();
                cmb_id.setSelectedIndex(-1);
                txt_firstName.setText("");
                txt_lastName.setText("");
                txt_contactNumber.setText("");
                txt_type.setText("");
                String delNo = String.valueOf(cmb_deliveryNumber.getSelectedItem());
               
                statement = connection.prepareStatement("SELECT * FROM delivery_and_delivery_representative_detail WHERE del_No=?");
                statement.setString(1, delNo);
                resultSet = statement.executeQuery();
                
                while(resultSet.next()) {
                    cmb_id.addItem(resultSet.getString(2));
                }
                
                resultSet.first();

                while (resultSet.next()) {
                    
                    emp = resultSet.getString(2);
                    cmb_id.setSelectedItem(emp);
                 
                    
                    statement = connection.prepareStatement("SELECT * FROM delivery_representative_master WHERE emp_ID=?");
                    statement.setString(1, emp);
                    ResultSet resultSet1 = statement.executeQuery();
                    
                    while (resultSet1.next()) {
                        txt_firstName.setText(resultSet1.getString(2));
                        txt_lastName.setText(resultSet1.getString(3));
                        txt_contactNumber.setText(String.valueOf(resultSet1.getInt(5)));
                        txt_type.setText(resultSet1.getString(6));
                    }                    
                    break;
                }
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error Occured.\n" + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_cmb_deliveryNumberItemStateChanged

    private void btn_generateExpenseFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_generateExpenseFormActionPerformed
        if (cmb_deliveryNumber.getSelectedIndex() != -1) {
            
            try {
               
                String formNumber = txt_formNumber.getText();
                String deliveryNumber = String.valueOf(cmb_deliveryNumber.getSelectedItem());
                String empID = String.valueOf(cmb_id.getSelectedItem());

                
                statement = connection.prepareStatement("INSERT INTO expense_form_header(form_No, del_No, emp_ID) VALUES (?,?,?)");
                statement.setString(1, formNumber);
                statement.setString(2, deliveryNumber);
                statement.setString(3, empID);
                int res = statement.executeUpdate();
                
                
                
                
               
                statement = connection.prepareStatement("UPDATE delivery_header SET del_Status = 'Delivered' WHERE del_No=?");
                statement.setString(1, deliveryNumber);
                res = statement.executeUpdate();
                
                
                
                 statement = connection.prepareStatement("SELECT * FROM delivery_and_delivery_representative_detail WHERE del_No=?");
                 statement.setString(1, deliveryNumber);
                 resultSet = statement.executeQuery();
               
               

                
                
                while (resultSet.next()) {
                    emp = resultSet.getString(2);
                    
                    statement = connection.prepareStatement("UPDATE delivery_representative_master SET dRep_Status = 'Available' WHERE emp_ID=?");
                    statement.setString(1, empID);
                    res = statement.executeUpdate();
                   
                }

                
                statement = connection.prepareStatement("SELECT * FROM delivery_and_vehicle_detail WHERE del_No=?");
                statement.setString(1, deliveryNumber);
                resultSet = statement.executeQuery();
                
                
                while (resultSet.next()) {
                    String vehicleNo = resultSet.getString(2);
                                  
                    statement = connection.prepareStatement("UPDATE vehicle_master SET veh_Status = 'Available' WHERE veh_No=?");
                    statement.setString(1, vehicleNo);
                    res = statement.executeUpdate();
                
                }
                
                
                statement = connection.prepareStatement("UPDATE delivery_header SET es_Status = 'Generated' WHERE del_No=?");
                statement.setString(1, deliveryNumber);
                res = statement.executeUpdate();

                JOptionPane.showMessageDialog(this, "Expense Form Succesfully Generated", "SUCCESS", JOptionPane.INFORMATION_MESSAGE);
                createExpenseFormPDF();
                mainNew.getDeliveryData();
                mainNew.getDelData();
                mainNew.getVehData();
                mainNew.getExpData();
                this.dispose();
            } catch (HeadlessException | SQLException e) {
                JOptionPane.showMessageDialog(this, "Error Occured.\n" + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
                System.out.println(e);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please Select a Delivery Number", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btn_generateExpenseFormActionPerformed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void cmb_idItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmb_idItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == java.awt.event.ItemEvent.SELECTED) {
            try {
                String empID = String.valueOf(cmb_id.getSelectedItem());
                
                statement = connection.prepareStatement("SELECT * FROM delivery_representative_master WHERE emp_ID=?");
                statement.setString(1, empID);
                resultSet = statement.executeQuery();
                
                
                while (resultSet.next()) {
                    txt_firstName.setText(resultSet.getString(2));
                    txt_lastName.setText(resultSet.getString(3));
                    txt_contactNumber.setText(String.valueOf(resultSet.getInt(5)));
                    txt_type.setText(resultSet.getString(6));
                } 
                
            } catch (SQLException e) {
                JOptionPane.showMessageDialog(this, "Error Occured.\n" + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_cmb_idItemStateChanged

    private void cmb_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmb_idActionPerformed

    private void createExpenseFormPDF() {
        Document document = new Document();
        try {
            String formNo = txt_formNumber.getText();
            
            PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream("ExpenseForm-" + formNo + ".pdf"));
            document.open();

            //Add Image
            Image image1 = Image.getInstance(System.getProperty("user.dir") + "\\src\\com\\itfac\\bit\\companylogo.jpg");
            //Scale to new height and new width of image
            image1.scaleAbsolute(200, 100);
            //Add to document
            document.add(image1);

            Font blueFont = FontFactory.getFont(FontFactory.COURIER, 30, Font.BOLD, new CMYKColor(255, 0, 0, 0));
            document.add(new Paragraph("Expense Form", blueFont));

            LineSeparator ls = new LineSeparator();
            document.add(new Chunk(ls));

            String del = String.valueOf(cmb_deliveryNumber.getSelectedItem());
            String empId = String.valueOf(cmb_id.getSelectedItem());
            String firstName = txt_firstName.getText();
            String lastName = txt_lastName.getText();
            String contactNo = txt_contactNumber.getText();
            document.add(new Paragraph("Form Number : " + formNo));
            document.add(new Paragraph("Employee ID : " + empId));
            document.add(new Paragraph("Delivery Representative Name : " + firstName + " " + lastName));
            document.add(new Paragraph("Contact Number : " + contactNo));
            document.add(new Paragraph("Delivery Number : " + del));

            PdfPTable table = new PdfPTable(2); // 2 columns.
            table.setWidthPercentage(100); //Width 100%
            table.setSpacingBefore(20f); //Space before table
            table.setSpacingAfter(20f); //Space after table

            //Set Column widths
            float[] columnWidths = {1f, 1f};
            table.setWidths(columnWidths);

            PdfPCell cell1 = new PdfPCell(new Paragraph("Expense Description"));
            cell1.setPaddingLeft(10);
            cell1.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell1.setVerticalAlignment(Element.ALIGN_LEFT);
            cell1.setFixedHeight(30f);

            PdfPCell cell2 = new PdfPCell(new Paragraph("Amount"));
            cell2.setPaddingLeft(10);
            cell2.setHorizontalAlignment(Element.ALIGN_CENTER);
            cell2.setVerticalAlignment(Element.ALIGN_LEFT);
            cell2.setFixedHeight(30f);

            PdfPCell cell3 = new PdfPCell(new Paragraph("Fuel Charges"));
            cell3.setPaddingLeft(10);
            cell3.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell3.setVerticalAlignment(Element.ALIGN_LEFT);
            cell3.setFixedHeight(30f);

            PdfPCell cell4 = new PdfPCell(new Paragraph(""));
            cell4.setPaddingLeft(10);
            cell4.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell4.setVerticalAlignment(Element.ALIGN_LEFT);
            cell4.setFixedHeight(30f);

            PdfPCell cell13 = new PdfPCell(new Paragraph("Vehicle Maintenance Charges"));
            cell13.setPaddingLeft(10);
            cell13.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell13.setVerticalAlignment(Element.ALIGN_LEFT);
            cell13.setFixedHeight(30f);

            PdfPCell cell14 = new PdfPCell(new Paragraph(""));
            cell14.setPaddingLeft(10);
            cell14.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell14.setVerticalAlignment(Element.ALIGN_LEFT);
            cell14.setFixedHeight(30f);

            PdfPCell cell5 = new PdfPCell(new Paragraph("Highway Charges"));
            cell5.setPaddingLeft(10);
            cell5.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell5.setVerticalAlignment(Element.ALIGN_LEFT);
            cell5.setFixedHeight(30f);

            PdfPCell cell6 = new PdfPCell(new Paragraph(""));
            cell6.setPaddingLeft(10);
            cell6.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell6.setVerticalAlignment(Element.ALIGN_LEFT);
            cell6.setFixedHeight(30f);

            PdfPCell cell7 = new PdfPCell(new Paragraph("Food"));
            cell7.setPaddingLeft(10);
            cell7.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell7.setVerticalAlignment(Element.ALIGN_LEFT);
            cell7.setFixedHeight(30f);

            PdfPCell cell8 = new PdfPCell(new Paragraph(""));
            cell8.setPaddingLeft(10);
            cell8.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell8.setVerticalAlignment(Element.ALIGN_LEFT);
            cell8.setFixedHeight(30f);

            PdfPCell cell9 = new PdfPCell(new Paragraph("Accomodation"));
            cell9.setPaddingLeft(10);
            cell9.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell9.setVerticalAlignment(Element.ALIGN_LEFT);
            cell9.setFixedHeight(30f);

            PdfPCell cell10 = new PdfPCell(new Paragraph(""));
            cell10.setPaddingLeft(10);
            cell10.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell10.setVerticalAlignment(Element.ALIGN_LEFT);
            cell10.setFixedHeight(30f);

            PdfPCell cell11 = new PdfPCell(new Paragraph("Other Charges"));
            cell11.setPaddingLeft(10);
            cell11.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell11.setVerticalAlignment(Element.ALIGN_LEFT);
            cell11.setFixedHeight(30f);

            PdfPCell cell12 = new PdfPCell(new Paragraph(""));
            cell12.setPaddingLeft(10);
            cell12.setHorizontalAlignment(Element.ALIGN_LEFT);
            cell12.setVerticalAlignment(Element.ALIGN_LEFT);
            cell12.setFixedHeight(30f);

            table.addCell(cell1);
            table.addCell(cell2);
            table.addCell(cell3);
            table.addCell(cell4);
            table.addCell(cell13);
            table.addCell(cell14);
            table.addCell(cell5);
            table.addCell(cell6);
            table.addCell(cell7);
            table.addCell(cell8);
            table.addCell(cell9);
            table.addCell(cell10);
            table.addCell(cell11);
            table.addCell(cell12);

            document.add(table);

            document.add(new Paragraph("Expense Total : "));
            Paragraph p1 = new Paragraph("***Please Make Sure you produce the Necessary Receipts Along With the Form.");
            p1.setSpacingBefore(50f);
            document.add(p1);

            document.close();
            writer.close();
            Desktop.getDesktop().open(new File("ExpenseForm-" + formNo + ".pdf"));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error Occured.\n" + e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
            System.out.println(e);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpenseForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpenseForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpenseForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpenseForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExpenseForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_generateExpenseForm;
    private javax.swing.JComboBox cmb_deliveryNumber;
    private javax.swing.JComboBox cmb_id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txt_contactNumber;
    private javax.swing.JTextField txt_firstName;
    private javax.swing.JTextField txt_formNumber;
    private javax.swing.JTextField txt_lastName;
    private javax.swing.JTextField txt_type;
    // End of variables declaration//GEN-END:variables
}
